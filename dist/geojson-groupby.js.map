{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "geojson-groupby.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nfunction groupBy() {\n  if (arguments.length < 2) return;\n  var args, features, properties;\n  // get args as array \n  // http://stackoverflow.com/a/15705938/713573\n  args = Array.prototype.slice.call(arguments, 0);\n\n  var features = Array.isArray(args[0]) ? args[0] : args[0].features;\n  var properties = args.slice(1);\n  return properties.reduce(function(group, prop, i, arr) {\n    if (Object.keys(group).length > 0) {\n      for (var key in group) {\n        group[key] = groupBy.apply(null,\n          [group[key]].concat(arr.slice(i))\n        );\n      }\n    } else {\n\t    if (typeof prop === 'string') {\n\t      group = groupByCategory(features, prop);\n\t    } else {\n\t      group = groupByRange(features, prop);\n\t    }\n    }\n    return group;\n  },{});\n}\n\nfunction groupByCategory(arr, prop) {\n  var isPropertyArray = Array.isArray(valueAt(arr[0], prop));\n  if (isPropertyArray) {\n    return arr.reduce(function(group, f) {\n      var tags = valueAt(f, prop);\n      tags.forEach(function(tag) { \n        group[tag] = group[tag] || [];\n        group[tag].push(f);\n      });\n      return group;\n    },{});\n  } else {\n    return arr.reduce(function(group, f) {\n      var tag = valueAt(f, prop);\n      group[tag] = group[tag] || [];\n      group[tag].push(f);\n      return group;\n    },{});\n  }\n}\n\nfunction groupByRange(arr, lookup) {\n  return arr.reduce(function(group, f) {\n    var val, ind, tag;\n    val = valueAt(f, lookup.property);\n    ind = locationOf(val, lookup.intervals);\n    tag = lookup.labels ? lookup.labels[ind] : ind;\n    group[tag] = group[tag] || [];\n    group[tag].push(f);\n    return group;\n  },{});\n}\n\nfunction valueAt(obj,path) {\n  //taken from http://stackoverflow.com/a/6394168/713573\n  function index(prev,cur) { \n    try {\n      return prev[cur]; \n    } catch(e) {\n      throw new Error('Path \"'+path+ '\" is not valid in '+ JSON.stringify(obj)); \n    }\n  }\n  return path.split('.').reduce(index, obj);\n}\n\n// similar to Array.findIndex but more efficient\n// http://stackoverflow.com/q/1344500/713573\nfunction locationOf(element, array, start, end) {\n  start = start || 0;\n  end = end || array.length;\n  var pivot = parseInt(start + (end - start) / 2, 10);\n  if (end-start <= 1 || array[pivot] === element) return pivot;\n  if (array[pivot] < element) {\n    return locationOf(element, array, pivot, end);\n  } else {\n    return locationOf(element, array, start, pivot);\n  }\n}\nmodule.exports = groupBy;\n"
  ]
}